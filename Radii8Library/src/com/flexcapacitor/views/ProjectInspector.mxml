<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:views="com.flexcapacitor.views.*"
		 xmlns:c="com.flexcapacitor.controls.*"
		 xmlns:fc="com.flexcapacitor.effects.popup.*"
		 xmlns:e="com.flexcapacitor.handlers.*"
		 
		 width="200" height="100%"
		 creationComplete="creationCompleteHandler(event)" 
		 >
	
	<fx:Script>
		<![CDATA[
			import com.flexcapacitor.controller.Radiate;
			import com.flexcapacitor.events.RadiateEvent;
			import com.flexcapacitor.model.IProject;
			
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			private var radiate:Radiate;
			
			
			/**
			 * Listen for any changes to the display list
			 * */
			protected function creationCompleteHandler(event:FlexEvent):void {
				radiate = Radiate.instance;
				
				radiate.addEventListener(RadiateEvent.PROJECT_CHANGE, projectChangeHandler);
				radiate.addEventListener(RadiateEvent.PROJECT_CREATED, projectCreatedHandler);
				
				if (radiate.project) {
					updateSelectedItem(radiate.project);
				}
				
			}
			
			/**
			 * 
			 * */
			private function labelFunction(data:Object):String {
				return data.name;
			}
			
			/**
			 * 
			 * */
			protected function projectChangeHandler(event:RadiateEvent):void {
				updateProjects();
				updateSelectedItem(event.selectedItem as IProject);
			}
			
			private function updateProjects():void {
				projects.refresh();
				//list.dataProvider = new ArrayCollection(radiate.projects);
			}
			
			private function updateSelectedItem(project:IProject):void {
				list.selectedItem = project;
			}
			
			protected function newProjectIcon_clickHandler(event:MouseEvent):void {
				radiate.createProject();
			}
			
			public function projectCreatedHandler(event:RadiateEvent):void {
				updateProjects();
			}
			
			protected function list_changeHandler(event:IndexChangeEvent):void {
				var project:IProject = list.selectedItem ? IProject(list.selectedItem) : null;
				
				if (project) {
					radiate.setProject(project);
				}
			}
			
			protected function publishButton_clickHandler(event:MouseEvent):void {
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:ArrayCollection id="projects" source="{radiate.projects}"/>
		
		<e:EventHandler eventName="click" target="{publishButton}">
			<fc:OpenPopUp popUpType="{PublishWindow}" modalDuration="250"/>
		</e:EventHandler>
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout paddingLeft="5" paddingRight="5" paddingBottom="5"/>
	</s:layout>

	<s:List id="list" 
			focusAlpha="0"
			minHeight="20"
			width="100%" 
			height="100%"
			labelFunction="labelFunction"
			borderAlpha=".2"
			dataProvider="{projects}"
			change="list_changeHandler(event)"
			itemRenderer="com.flexcapacitor.views.renderers.EditableProjectRenderer"
			>
		
	</s:List>
	
	<s:HGroup width="100%"
			 height="24"
			 minHeight="24"
			 verticalAlign="middle"
			 >
		<s:Button id="publishButton" 
				  label="Publish" />
		<s:Spacer width="100%"/>
		<c:ImageButton id="newProjectIcon" 
					   source="{Radii8LibraryAssets.newFile}" 
					   toolTip="New Project"
					   click="newProjectIcon_clickHandler(event)"
					   />
	</s:HGroup>
	
</s:Group>
