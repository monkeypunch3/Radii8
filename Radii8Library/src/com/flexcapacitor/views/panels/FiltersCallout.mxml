<?xml version="1.0" encoding="utf-8"?>
<controls:Callout xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:controls="com.flexcapacitor.controls.*" 
		 
		 hideOnMouseDownOutside="true"
		 creationComplete="callout1_creationCompleteHandler(event)"
		 horizontalPosition="middle"
		 verticalPosition="before"
		 open="callout1_openHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			import spark.events.PopUpEvent;


			[Bindable]
			public var filtersCollection:ArrayCollection = new ArrayCollection();
			
			protected function list_resizeHandler(event:ResizeEvent):void {
				updatePopUpPosition();
			}
			
			protected function callout1_creationCompleteHandler(event:FlexEvent):void {
				var filtersArray:Array = [];
				filtersArray.push({name:"Bevel", classe:"spark.filters.BevelFilter"});
				filtersArray.push({name:"Blur", classe:"spark.filters.BlurFilter"});
				filtersArray.push({name:"Black and White", classe:"com.flexcapacitor.filters.BlackAndWhiteFilter"});
				filtersArray.push({name:"Border", classe:"com.flexcapacitor.filters.BorderStrokeFilter"});
				//filtersArray.push({name:"Text Shadow", classe:"com.flexcapacitor.filters.TextShadowFilter"});
				//filtersArray.push({name:"Color Matrix", classe:"spark.filters.ColorMatrixFilter"});
				//filtersArray.push({name:"Convolution", classe:"spark.filters.ConvolutionFilter"});
				//filtersArray.push({name:"Displacement Map", classe:"spark.filters.DisplacementMapFilter"});
				filtersArray.push({name:"Drop Shadow", classe:"spark.filters.DropShadowFilter"});
				filtersArray.push({name:"Glow", classe:"spark.filters.GlowFilter"});
				filtersCollection.source = filtersArray;
				filtersList.dataProvider = filtersCollection;
			}
			
			protected function filtersList_clickHandler(event:MouseEvent):void {
				var selectedItem:Object = filtersList.selectedItem;
				close(false, filtersList.selectedItem);
			}
			
			/**
			 *  @private
			 */
			override public function close(commit:Boolean=false, data:*=null):void {
				var selectedItem:Object = filtersList.selectedItem;
				
				super.close(commit, selectedItem);
			}
			
			protected function callout1_openHandler(event:PopUpEvent):void
			{
				filtersList.selectedIndex = -1;
			}
			
		]]>
	</fx:Script>
	
	<s:List id="filtersList" 
			width="100%" 
			height="100%"
			labelField="name" 
			borderVisible="false"
			click="filtersList_clickHandler(event)"
			resize="list_resizeHandler(event)" />
	
</controls:Callout>
