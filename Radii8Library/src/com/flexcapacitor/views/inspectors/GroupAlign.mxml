<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:renderers="com.flexcapacitor.views.renderers.*"
		 
		 implements="com.flexcapacitor.views.IInspector" 
		 styleName="inspectablePanel">
	
	<fx:Script>
		<![CDATA[
			import com.flexcapacitor.controller.Radiate;
			import com.flexcapacitor.events.RadiateEvent;
			import com.flexcapacitor.model.AccessorMetaData;
			import com.flexcapacitor.utils.ClassUtils;
			
			public var radiate:Radiate;
			public var target:Object;
			public var data:Object;
			
			public function activate(selectedTarget:Object = null):void {
				radiate = Radiate.instance;
				
				radiate.addEventListener(RadiateEvent.TARGET_CHANGE, handleTargetChange, false, 0, true);
				radiate.addEventListener(RadiateEvent.PROPERTY_CHANGED, propertyChangeHandler, false, 0, true);
				radiate.addEventListener(RadiateEvent.HISTORY_CHANGE, propertyChangeHandler, false, 0, true);
				
				if (radiate.target) {
					target = radiate.target;
				}
				
				update();
			}
			
			public function deactivate():void {
				if (radiate) {
					radiate.removeEventListener(RadiateEvent.TARGET_CHANGE, handleTargetChange);
					radiate.removeEventListener(RadiateEvent.PROPERTY_CHANGED, propertyChangeHandler);
					radiate.removeEventListener(RadiateEvent.HISTORY_CHANGE, propertyChangeHandler);
				}
				
				target = null;
				data = null;
			}
			
			protected function handleTargetChange(event:RadiateEvent):void {
				if (target!=event.selectedItem) {
					target = event.selectedItem;
					update();
				}
			}
			
			public function update():void {
				if (target==null) return;
				var horizontalAccessor:AccessorMetaData = ClassUtils.getMetaDataOfProperty(target, "horizontalAlign");
				var verticalAccessor:AccessorMetaData = ClassUtils.getMetaDataOfProperty(target, "verticalAlign");

				horizontalAlignRenderer.data = horizontalAccessor;
				verticalAlignRenderer.data = verticalAccessor;
			}
			
			protected function propertyChangeHandler(event:RadiateEvent):void {
				callLater(update);
			}
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	
	<s:HGroup width="100%" verticalAlign="baseline" gap="{getStyle('gap')}">
		<s:Label text="Horizontal Align" styleName="inspectablePanelLabel" width="{getStyle('labelWidth')}"/>
		<renderers:DropDownListRenderer id="horizontalAlignRenderer" height="24" defaultValue="left"/>
	</s:HGroup>
	
	<s:HGroup width="100%" verticalAlign="baseline" gap="{getStyle('gap')}">
		<s:Label text="Vertical Align" styleName="inspectablePanelLabel" width="{getStyle('labelWidth')}"/>
		<renderers:DropDownListRenderer id="verticalAlignRenderer" height="24" defaultValue="middle"/>
	</s:HGroup>
</s:Group>
