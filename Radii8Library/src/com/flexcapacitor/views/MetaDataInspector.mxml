<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:c="com.flexcapacitor.controls.*"
		 xmlns:handlers="com.flexcapacitor.handlers.*" 
		 xmlns:collections="com.flexcapacitor.effects.collections.*"
		 xmlns:components="com.flexcapacitor.components.*" 
		 
		 minWidth="200" 
		 minHeight="100"
		 creationComplete="group1_creationCompleteHandler(event)" 
		 >
	
	<fx:Script>
		<![CDATA[
			import com.flexcapacitor.controller.Radiate;
			import com.flexcapacitor.events.RadiateEvent;
			import com.flexcapacitor.model.MetaData;
			import com.flexcapacitor.utils.SyntaxHighlighter;
			
			import flash.utils.getTimer;
			
			import mx.events.FlexEvent;
			
			/**
			 * Reference to Radiate
			 * */
			public var radiate:Radiate;
			
			public var syntaxHighlighter:SyntaxHighlighter;
			
			public var rawData:String;
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void {
				radiate = Radiate.getInstance();
				
				radiate.addEventListener(RadiateEvent.PROPERTY_SELECTED, propertySelectedHandler);
				
				if (radiate.target) {
					//target = radiate.target;
				}
			}
			
			protected function propertySelectedHandler(event:RadiateEvent):void {
				var metadata:MetaData = event.selectedItem as MetaData;
				var newData:String;
				
				//trace("property change event");
				
				newData = metadata.raw;
				if (rawData==newData) {
					//trace("data hasn't changed");
					return;
				}
				rawData = newData;
				mxTextArea.text = rawData;
				mxTextAreaChangeHandler();
			}
			
			private function mxTextAreaChangeHandler():void {
				//trace("change handler:" + getTimer())
				if (!syntaxHighlighter) {
					syntaxHighlighter = new SyntaxHighlighter(mxTextArea);
					syntaxHighlighter.timerInterval = 20;
					syntaxHighlighter.cssString = SyntaxHighlighter.CRIMSON_EDITOR_CSS;
					syntaxHighlighter.addEventListener(Event.COMPLETE, completeHandler, false, 0, true);
				}
				
				syntaxHighlighter.highlightCode();
			}
			
			protected function completeHandler(event:Event):void {
				//trace("complete event:" + getTimer());
			}
			
		]]>
	</fx:Script>
	
	
	<!--<s:TextArea id="metadataTextArea" 
				top="8"
				focusColor="#585858"
				width="100%" height="100%" 
				fontFamily="Courier New"
				borderVisible="false"
				paddingTop="8"
				fontSize="13"
				prompt="No metadata available. Select a property, style or event.">
		<s:keyFocusChange>
			event.preventDefault();
			event.currentTarget.insertText("\t");
        </s:keyFocusChange>
	</s:TextArea>-->
	
	
	
	<mx:TextArea id="mxTextArea"  
				 top="8"
				 focusAlpha="0"
				 fontFamily="Monaco,Menlo,Ubuntu Mono,Consolas,source-code-pro,monospace"
				 borderVisible="false"
				 paddingTop="8"
				 fontSize="12"
				 width="100%" height="100%"
				 editable="false"
				 leading="0"
				 />
</s:Group>
