<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   
			   minWidth="955" minHeight="600"
			   creationComplete="application1_creationCompleteHandler(event)"
			   mouseDown="application1_mouseDownHandler(event)"
			   >
	
	<fx:Script>
		<![CDATA[
			import com.flexcapacitor.tools.Selection;
			import com.flexcapacitor.utils.DisplayObjectUtils;
			
			import mx.events.FlexEvent;
			
			import spark.components.DataGroup;
			import spark.core.SpriteVisualElement;
			
			public var selection:Selection;
			
			protected function group1_mouseDownHandler(event:MouseEvent):void {
				//trace("event target="+ event.target);
				targetInput.text = Object(event.currentTarget).toString();
				//Radiate.setDocuments(group1);
				//selection.drawSelection(event.target, toolLayer);
			}
			
			public var spriteVE:SpriteVisualElement;
			public var sprite:Sprite;
			public var bitmap:Bitmap;
			
			protected function application1_mouseDownHandler(event:MouseEvent):void {
				//trace("event target="+ event.target);
				targetInput.text = Object(event.target).toString();
				var target:DisplayObject = event.target as DisplayObject;
				if (target is DataGroup) {
					target = list.skin;
				}
				//Radiate.setDocuments(group1);
				
				if (radioGroup.selectedValue=="drawSelection") {
					selection.drawSelection(target, toolLayer);
				}
				else if (radioGroup.selectedValue=="drawSelection2") {
					selection.drawSelection(target, toolLayer);
				}
				else if (radioGroup.selectedValue=="getSpriteSnapshot") {
					//group2.removeAllElements();
					
					if (!spriteVE) {
						spriteVE = new SpriteVisualElement();
						group2.addElement(spriteVE);
					}
					else {
						if (spriteVE.numChildren>0) {
							spriteVE.removeChildren();
						}
					}
					
					sprite = DisplayObjectUtils.getSpriteSnapshot(target);
					spriteVE.addChild(sprite);
				}
				else if (radioGroup.selectedValue=="getBitmapDataSnapshot") {
					
					if (!bitmap) {
						
					}
					
					if (!spriteVE) {
						spriteVE = new SpriteVisualElement();
						bitmap = new Bitmap(bitmapData, PixelSnapping.ALWAYS, true);
						group2.addElement(spriteVE);
						spriteVE.addChild(bitmap);
					}
					else {
						spriteVE.removeChildren();
					}
					
					//bitmap.x = bounds.left;
					//bitmap.y = bounds.top;
					var bitmapData:BitmapData = DisplayObjectUtils.getBitmapDataSnapshot(target);
					bitmap.bitmapData = bitmapData;
					spriteVE.addChild(bitmap);
					
					//spriteVE.addChild(sprite);
				}
				else if (radioGroup.selectedValue=="getBitmapDataSnapshot2") {
					
					if (!bitmap) {
						
					}
					
					if (!spriteVE) {
						spriteVE = new SpriteVisualElement();
						bitmap = new Bitmap(bitmapData, PixelSnapping.ALWAYS, true);
						group2.addElement(spriteVE);
						spriteVE.addChild(bitmap);
					}
					else {
						spriteVE.removeChildren();
						//spriteVE.graphics.clear();
						//spriteVE.removeChild(bitmap);
					}
					
					//bitmap.x = bounds.left;
					//bitmap.y = bounds.top;
					var bitmapData:BitmapData = DisplayObjectUtils.getBitmapDataSnapshot2(target);
					bitmap.bitmapData = bitmapData;
					spriteVE.addChild(bitmap);
					
					//spriteVE.addChild(sprite);
				}
			}
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void {
				selection = new Selection();
				selection.selectionBorderColor = 0xFF0000;
				/*selection.updateDocument(this);
				//selection.enable();
				selection.enableDrag = false;
				//selection.toolLayer = toolLayer;*/
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:ArrayCollection id="data">
			<fx:Array>
				<fx:String>Apple</fx:String>
				<fx:String>Orange</fx:String>
				<fx:String>Banana</fx:String>
			</fx:Array>
		</s:ArrayCollection>
		<s:ArrayCollection id="methods">
			<fx:Array>
				<fx:String>Apple</fx:String>
				<fx:String>Orange</fx:String>
				<fx:String>Banana</fx:String>
			</fx:Array>
		</s:ArrayCollection>
		<s:RadioButtonGroup id="radioGroup"  />
	</fx:Declarations>
	
	
	<s:HGroup top="30">
		<s:RadioButton label="drawSelection" group="{radioGroup}" selected="false" />
		<s:RadioButton label="drawSelection2" group="{radioGroup}" selected="true" />
		<s:RadioButton label="getSpriteSnapshot" group="{radioGroup}" selected="false" />
		<s:RadioButton label="getBitmapDataSnapshot" group="{radioGroup}" selected="false" />
		<s:RadioButton label="getBitmapDataSnapshot2" group="{radioGroup}" selected="false" />
		<s:RadioButton label="getBitmapAssetSnapshot" group="{radioGroup}" selected="false" />
		<s:RadioButton label="getBitmapAssetSnapshot2" group="{radioGroup}" selected="false" />
		<s:RadioButton label="getHighlightBitmapCapture" group="{radioGroup}" selected="false" />
	</s:HGroup>
	
		<!--<s:Scroller width="500" height="500" horizontalCenter="0" verticalCenter="0">-->
	<s:BorderContainer id="container" left="50" top="100">
		
		<s:HGroup id="hgroup1" 
				 mouseDown="group1_mouseDownHandler(event)"
				 mouseEnabledWhereTransparent="true">
			
			<s:List id="list" dataProvider="{data}" width="100">
			</s:List>
			<s:Group >
					
				<s:Rect x="0" width="60" height="60" radiusX="0" radiusY="0">
					<s:fill>
						<s:SolidColor color="#00fff0"/>
					</s:fill>
				</s:Rect>
			</s:Group>
			<s:Group width="60" height="60" >
					
				<s:Rect x="0" width="60" height="60" radiusX="0" radiusY="0">
					<s:fill>
						<s:SolidColor color="#000fff"/>
					</s:fill>
				</s:Rect>
			</s:Group>
			<s:HGroup width="60" height="60" >
					
				<s:Rect x="0" width="60" height="60" radiusX="0" radiusY="0">
					<s:fill>
						<s:SolidColor color="#F00fff"/>
					</s:fill>
				</s:Rect>
				<s:Rect x="0" width="60" height="60" radiusX="0" radiusY="0">
					<s:fill>
						<s:SolidColor color="#Ff0fff"/>
					</s:fill>
				</s:Rect>
			</s:HGroup>
			<s:Button id="button" label="Button" />
			<s:ToggleButton id="toggleButton" label="Toggle Button" />
			<s:RadioButton id="radioButton" label="Radio Button" groupName="Test"/>
			<s:ComboBox id="comboBox" 
						 dataProvider="{data}"/>
			<s:DropDownList id="dropDownList" 
						 dataProvider="{data}"/>
			
			<s:Rect id="rect1" x="10" width="100" height="100" radiusX="10" radiusY="10">
				<s:fill>
					<s:SolidColor color="#ff0000"/>
				</s:fill>
			</s:Rect>
			<s:Rect id="rect2" x="0" y="120" width="60" height="60" radiusX="0" radiusY="0">
				<s:fill>
					<s:SolidColor color="#00ff00"/>
				</s:fill>
			</s:Rect>
			
			<s:Ellipse id="ellipse1" x="150" width="100" height="100">
				<s:fill>
					<s:SolidColor color="#ff0000"/>
				</s:fill>
			</s:Ellipse>
			
			<s:Button x="200" y="120" label="Hello World"/>
		</s:HGroup>

		<s:Group id="toolLayer" mouseChildren="false" mouseEnabled="false">
			
			<s:Ellipse id="ellipse2" x="0" width="100" height="100">
				<s:fill>
					<s:SolidColor color="#ff0000"/>
				</s:fill>
			</s:Ellipse>
		</s:Group>
		
	</s:BorderContainer>
	<!--</s:Scroller>-->
	
	
	
	<s:BorderContainer id="group2" width="500" height="300" left="50" y="300"
					   mouseDown="group1_mouseDownHandler(event)"
					   backgroundColor="red"
					   borderWeight="2"
					   borderColor="blue"
					   >
		
		<!--<s:Rect id="rect3" x="0" width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="#898989"/>
			</s:fill>
		</s:Rect>-->
	</s:BorderContainer>
	
	
	<s:TextInput id="targetInput" width="100%"/>
</s:Application>
